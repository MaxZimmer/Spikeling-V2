# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Spikeling.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from pyqtgraph import PlotWidget, GraphicsView
import numpy as np

DarkSolarized = [[0,30,38],[131,148,150],[220,50,47],[38,139,210]]

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 720)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 1280, 700))
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setStyleSheet("color: rgb(131, 148, 150);\n"
"background-color: rgb(7, 54, 66);")
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_2.setGeometry(QtCore.QRect(1070, 0, 200, 645))
        self.groupBox_2.setStyleSheet("color: rgb(147, 161, 161);")
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_7 = QtWidgets.QLabel(self.groupBox_2)
        self.label_7.setGeometry(QtCore.QRect(5, 290, 190, 31))
        self.label_7.setStyleSheet("color: rgb(147, 161, 161);")
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.groupBox_2)
        self.label_8.setGeometry(QtCore.QRect(5, 470, 190, 31))
        self.label_8.setStyleSheet("color: rgb(147, 161, 161);")
        self.label_8.setObjectName("label_8")
        self.line_3 = QtWidgets.QFrame(self.groupBox_2)
        self.line_3.setGeometry(QtCore.QRect(1, 460, 198, 20))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.label_20 = QtWidgets.QLabel(self.groupBox_2)
        self.label_20.setGeometry(QtCore.QRect(5, 20, 190, 31))
        self.label_20.setStyleSheet("color: rgb(147, 161, 161);")
        self.label_20.setObjectName("label_20")
        self.line_4 = QtWidgets.QFrame(self.groupBox_2)
        self.line_4.setGeometry(QtCore.QRect(1, 140, 198, 3))
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.lineEdit_10 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_10.setEnabled(False)
        self.lineEdit_10.setGeometry(QtCore.QRect(60, 80, 80, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.lineEdit_10.setFont(font)
        self.lineEdit_10.setMaxLength(100)
        self.lineEdit_10.setFrame(True)
        self.lineEdit_10.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.checkBox_2 = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox_2.setGeometry(QtCore.QRect(10, 410, 100, 20))
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox_3 = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox_3.setGeometry(QtCore.QRect(10, 440, 100, 20))
        self.checkBox_3.setObjectName("checkBox_3")
        self.checkBox_4 = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox_4.setGeometry(QtCore.QRect(10, 620, 100, 20))
        self.checkBox_4.setObjectName("checkBox_4")
        self.checkBox_5 = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox_5.setGeometry(QtCore.QRect(10, 590, 100, 20))
        self.checkBox_5.setObjectName("checkBox_5")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_5.setEnabled(False)
        self.lineEdit_5.setGeometry(QtCore.QRect(110, 620, 75, 20))
        self.lineEdit_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_6.setEnabled(False)
        self.lineEdit_6.setGeometry(QtCore.QRect(110, 590, 75, 20))
        self.lineEdit_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.checkBox_6 = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox_6.setGeometry(QtCore.QRect(5, 520, 190, 20))
        self.checkBox_6.setObjectName("checkBox_6")
        self.checkBox_10 = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox_10.setGeometry(QtCore.QRect(5, 60, 161, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.checkBox_10.setFont(font)
        self.checkBox_10.setTristate(False)
        self.checkBox_10.setObjectName("checkBox_10")
        self.checkBox_7 = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox_7.setGeometry(QtCore.QRect(5, 340, 190, 20))
        self.checkBox_7.setObjectName("checkBox_7")
        self.label_6 = QtWidgets.QLabel(self.groupBox_2)
        self.label_6.setGeometry(QtCore.QRect(5, 150, 190, 21))
        self.label_6.setStyleSheet("color: rgb(147, 161, 161);")
        self.label_6.setObjectName("label_6")
        self.line_2 = QtWidgets.QFrame(self.groupBox_2)
        self.line_2.setGeometry(QtCore.QRect(0, 280, 198, 16))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.checkBox_14 = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox_14.setGeometry(QtCore.QRect(5, 200, 190, 20))
        self.checkBox_14.setObjectName("checkBox_14")
        self.horizontalSlider_4 = QtWidgets.QSlider(self.groupBox_2)
        self.horizontalSlider_4.setGeometry(QtCore.QRect(5, 220, 190, 27))
        self.horizontalSlider_4.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_4.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.horizontalSlider_4.setObjectName("horizontalSlider_4")
        self.label_17 = QtWidgets.QLabel(self.groupBox_2)
        self.label_17.setGeometry(QtCore.QRect(150, 87, 25, 16))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_17.setFont(font)
        self.label_17.setObjectName("label_17")
        self.label_19 = QtWidgets.QLabel(self.groupBox_2)
        self.label_19.setGeometry(QtCore.QRect(6, 245, 10, 16))
        self.label_19.setAlignment(QtCore.Qt.AlignCenter)
        self.label_19.setObjectName("label_19")
        self.label_22 = QtWidgets.QLabel(self.groupBox_2)
        self.label_22.setGeometry(QtCore.QRect(170, 245, 25, 16))
        self.label_22.setAlignment(QtCore.Qt.AlignCenter)
        self.label_22.setObjectName("label_22")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_3.setEnabled(False)
        self.lineEdit_3.setGeometry(QtCore.QRect(110, 410, 75, 20))
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_4.setEnabled(False)
        self.lineEdit_4.setGeometry(QtCore.QRect(110, 440, 75, 20))
        self.lineEdit_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.horizontalSlider_6 = QtWidgets.QSlider(self.groupBox_2)
        self.horizontalSlider_6.setGeometry(QtCore.QRect(5, 540, 190, 27))
        self.horizontalSlider_6.setMinimum(-50)
        self.horizontalSlider_6.setMaximum(50)
        self.horizontalSlider_6.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_6.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.horizontalSlider_6.setObjectName("horizontalSlider_6")
        self.horizontalSlider_5 = QtWidgets.QSlider(self.groupBox_2)
        self.horizontalSlider_5.setEnabled(False)
        self.horizontalSlider_5.setGeometry(QtCore.QRect(5, 360, 190, 27))
        self.horizontalSlider_5.setMinimum(-50)
        self.horizontalSlider_5.setMaximum(50)
        self.horizontalSlider_5.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_5.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.horizontalSlider_5.setObjectName("horizontalSlider_5")
        self.label_21 = QtWidgets.QLabel(self.tab)
        self.label_21.setGeometry(QtCore.QRect(0, 650, 1270, 20))
        self.label_21.setStyleSheet("color: rgb(131, 148, 150);")
        self.label_21.setObjectName("label_21")
        self.groupBox = QtWidgets.QGroupBox(self.tab)
        self.groupBox.setGeometry(QtCore.QRect(860, 0, 200, 645))
        self.groupBox.setStyleSheet("color: rgb(147, 161, 161);")
        self.groupBox.setObjectName("groupBox")
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(5, 20, 190, 21))
        self.label_2.setStyleSheet("color: rgb(147, 161, 161);")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(5, 470, 190, 31))
        self.label_3.setStyleSheet("color: rgb(147, 161, 161);")
        self.label_3.setObjectName("label_3")
        self.line = QtWidgets.QFrame(self.groupBox)
        self.line.setGeometry(QtCore.QRect(1, 460, 198, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.widget = QtWidgets.QWidget(self.groupBox)
        self.widget.setEnabled(False)
        self.widget.setGeometry(QtCore.QRect(5, 400, 190, 50))
        self.widget.setStyleSheet("background-color: rgb(0, 30, 38);")
        self.widget.setObjectName("widget")
        self.checkBox = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox.setGeometry(QtCore.QRect(5, 350, 190, 20))
        self.checkBox.setObjectName("checkBox")
        self.checkBox_8 = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox_8.setGeometry(QtCore.QRect(5, 200, 190, 20))
        self.checkBox_8.setObjectName("checkBox_8")
        self.checkBox_9 = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox_9.setGeometry(QtCore.QRect(5, 60, 190, 20))
        self.checkBox_9.setObjectName("checkBox_9")
        self.checkBox_11 = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox_11.setGeometry(QtCore.QRect(5, 520, 190, 20))
        self.checkBox_11.setObjectName("checkBox_11")
        self.checkBox_12 = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox_12.setGeometry(QtCore.QRect(10, 620, 100, 20))
        self.checkBox_12.setObjectName("checkBox_12")
        self.checkBox_13 = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox_13.setGeometry(QtCore.QRect(10, 590, 100, 20))
        self.checkBox_13.setObjectName("checkBox_13")
        self.lineEdit_11 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_11.setEnabled(False)
        self.lineEdit_11.setGeometry(QtCore.QRect(110, 620, 75, 20))
        self.lineEdit_11.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.lineEdit_12 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_12.setEnabled(False)
        self.lineEdit_12.setGeometry(QtCore.QRect(110, 590, 75, 20))
        self.lineEdit_12.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEdit_12.setObjectName("lineEdit_12")
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setGeometry(QtCore.QRect(10, 260, 180, 30))
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap("Pictures & Logos/StimStrenght.png"))
        self.label_9.setScaledContents(True)
        self.label_9.setObjectName("label_9")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(10, 130, 180, 15))
        self.label_5.setText("")
        self.label_5.setPixmap(QtGui.QPixmap("Pictures & Logos/StimFrequency.png"))
        self.label_5.setScaledContents(True)
        self.label_5.setObjectName("label_5")
        self.comboBox_3 = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_3.setGeometry(QtCore.QRect(10, 370, 180, 22))
        self.comboBox_3.setObjectName("comboBox_3")
        self.label_18 = QtWidgets.QLabel(self.groupBox)
        self.label_18.setGeometry(QtCore.QRect(95, 245, 10, 16))
        self.label_18.setAlignment(QtCore.Qt.AlignCenter)
        self.label_18.setObjectName("label_18")
        self.horizontalSlider_2 = QtWidgets.QSlider(self.groupBox)
        self.horizontalSlider_2.setEnabled(False)
        self.horizontalSlider_2.setGeometry(QtCore.QRect(5, 220, 190, 27))
        self.horizontalSlider_2.setMinimum(-50)
        self.horizontalSlider_2.setMaximum(50)
        self.horizontalSlider_2.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_2.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.horizontalSlider_2.setObjectName("horizontalSlider_2")
        self.horizontalSlider = QtWidgets.QSlider(self.groupBox)
        self.horizontalSlider.setEnabled(False)
        self.horizontalSlider.setGeometry(QtCore.QRect(5, 80, 190, 27))
        self.horizontalSlider.setMinimum(-50)
        self.horizontalSlider.setMaximum(50)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.horizontalSlider_3 = QtWidgets.QSlider(self.groupBox)
        self.horizontalSlider_3.setGeometry(QtCore.QRect(5, 540, 190, 27))
        self.horizontalSlider_3.setMinimum(-50)
        self.horizontalSlider_3.setMaximum(50)
        self.horizontalSlider_3.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_3.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.horizontalSlider_3.setObjectName("horizontalSlider_3")
        self.Oscilloscope = QtWidgets.QWidget(self.tab)
        self.Oscilloscope.setGeometry(QtCore.QRect(10, 70, 840, 480))
        self.Oscilloscope.setAutoFillBackground(False)
        self.Oscilloscope.setStyleSheet("\n"
"background-color: rgb(0, 30, 38);")
        self.Oscilloscope.setObjectName("Oscilloscope")
        self.checkBox_15 = QtWidgets.QCheckBox(self.Oscilloscope)
        self.checkBox_15.setEnabled(True)
        self.checkBox_15.setGeometry(QtCore.QRect(10, 0, 100, 20))
        self.checkBox_15.setAutoFillBackground(False)
        self.checkBox_15.setStyleSheet("color: rgb(220, 50, 47);")
        self.checkBox_15.setChecked(True)
        self.checkBox_15.setObjectName("checkBox_15")
        self.checkBox_16 = QtWidgets.QCheckBox(self.Oscilloscope)
        self.checkBox_16.setEnabled(True)
        self.checkBox_16.setGeometry(QtCore.QRect(60, 0, 100, 20))
        self.checkBox_16.setAutoFillBackground(False)
        self.checkBox_16.setStyleSheet("color: rgb(133, 153, 0);")
        self.checkBox_16.setChecked(True)
        self.checkBox_16.setObjectName("checkBox_16")
        self.checkBox_17 = QtWidgets.QCheckBox(self.Oscilloscope)
        self.checkBox_17.setEnabled(True)
        self.checkBox_17.setGeometry(QtCore.QRect(165, 0, 100, 20))
        self.checkBox_17.setAutoFillBackground(False)
        self.checkBox_17.setStyleSheet("color: rgb(38, 139, 210);")
        self.checkBox_17.setChecked(True)
        self.checkBox_17.setObjectName("checkBox_17")
        self.checkBox_18 = QtWidgets.QCheckBox(self.Oscilloscope)
        self.checkBox_18.setEnabled(True)
        self.checkBox_18.setGeometry(QtCore.QRect(325, 0, 100, 20))
        self.checkBox_18.setAutoFillBackground(False)
        self.checkBox_18.setStyleSheet("color: rgb(203, 75, 22);")
        self.checkBox_18.setChecked(False)
        self.checkBox_18.setObjectName("checkBox_18")
        self.checkBox_19 = QtWidgets.QCheckBox(self.Oscilloscope)
        self.checkBox_19.setEnabled(True)
        self.checkBox_19.setGeometry(QtCore.QRect(430, 0, 110, 20))
        self.checkBox_19.setAutoFillBackground(False)
        self.checkBox_19.setStyleSheet("color: rgb(42, 161, 152);")
        self.checkBox_19.setChecked(False)
        self.checkBox_19.setObjectName("checkBox_19")
        self.checkBox_20 = QtWidgets.QCheckBox(self.Oscilloscope)
        self.checkBox_20.setEnabled(True)
        self.checkBox_20.setGeometry(QtCore.QRect(610, 0, 100, 20))
        self.checkBox_20.setAutoFillBackground(False)
        self.checkBox_20.setStyleSheet("color: rgb(181, 137, 0);")
        self.checkBox_20.setChecked(False)
        self.checkBox_20.setObjectName("checkBox_20")
        self.checkBox_21 = QtWidgets.QCheckBox(self.Oscilloscope)
        self.checkBox_21.setEnabled(True)
        self.checkBox_21.setGeometry(QtCore.QRect(720, 0, 110, 20))
        self.checkBox_21.setAutoFillBackground(False)
        self.checkBox_21.setStyleSheet("color: rgb(108, 113, 196);")
        self.checkBox_21.setChecked(False)
        self.checkBox_21.setObjectName("checkBox_21")
        self.groupBox_3 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_3.setGeometry(QtCore.QRect(10, 555, 840, 90))
        self.groupBox_3.setStyleSheet("color: rgb(147, 161, 161);")
        self.groupBox_3.setObjectName("groupBox_3")
        self.comboBox_2 = QtWidgets.QComboBox(self.groupBox_3)
        self.comboBox_2.setGeometry(QtCore.QRect(10, 20, 250, 22))
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_2.setGeometry(QtCore.QRect(300, 20, 75, 24))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("color: rgb(147, 161, 161);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.lineEdit_9 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_9.setGeometry(QtCore.QRect(630, 20, 113, 22))
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.pushButton_5 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_5.setGeometry(QtCore.QRect(760, 20, 75, 24))
        self.pushButton_5.setObjectName("pushButton_5")
        self.label_16 = QtWidgets.QLabel(self.groupBox_3)
        self.label_16.setGeometry(QtCore.QRect(590, 20, 31, 16))
        self.label_16.setObjectName("label_16")
        self.lineEdit_7 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_7.setGeometry(QtCore.QRect(11, 125, 133, 22))
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.pushButton = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton.setGeometry(QtCore.QRect(885, 124, 75, 24))
        self.pushButton.setObjectName("pushButton")
        self.lineEdit_8 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_8.setGeometry(QtCore.QRect(110, 60, 50, 22))
        self.lineEdit_8.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.label_15 = QtWidgets.QLabel(self.groupBox_3)
        self.label_15.setGeometry(QtCore.QRect(10, 60, 101, 16))
        self.label_15.setObjectName("label_15")
        self.comboBox_4 = QtWidgets.QComboBox(self.tab)
        self.comboBox_4.setGeometry(QtCore.QRect(110, 5, 161, 22))
        self.comboBox_4.setObjectName("comboBox_4")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.label_25 = QtWidgets.QLabel(self.tab)
        self.label_25.setGeometry(QtCore.QRect(10, 5, 81, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_25.setFont(font)
        self.label_25.setObjectName("label_25")
        self.radioButton = QtWidgets.QRadioButton(self.tab)
        self.radioButton.setEnabled(False)
        self.radioButton.setGeometry(QtCore.QRect(290, 5, 101, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton.setFont(font)
        self.radioButton.setObjectName("radioButton")
        self.label_4 = QtWidgets.QLabel(self.tab)
        self.label_4.setGeometry(QtCore.QRect(540, 644, 120, 30))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap("Pictures & Logos/Lab Logo.png"))
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        self.label_26 = QtWidgets.QLabel(self.tab)
        self.label_26.setGeometry(QtCore.QRect(650, 650, 151, 16))
        self.label_26.setText("")
        self.label_26.setPixmap(QtGui.QPixmap("Pictures & Logos/ON Logo.png"))
        self.label_26.setScaledContents(True)
        self.label_26.setObjectName("label_26")
        self.label_28 = QtWidgets.QLabel(self.tab)
        self.label_28.setGeometry(QtCore.QRect(810, 645, 40, 26))
        self.label_28.setText("")
        self.label_28.setPixmap(QtGui.QPixmap("Pictures & Logos/TReND Logo 2.png"))
        self.label_28.setScaledContents(True)
        self.label_28.setObjectName("label_28")
        self.label = QtWidgets.QLabel(self.tab)
        self.label.setGeometry(QtCore.QRect(250, 35, 160, 26))
        self.label.setStyleSheet("color: rgb(147, 161, 161);")
        self.label.setObjectName("label")
        self.comboBox = QtWidgets.QComboBox(self.tab)
        self.comboBox.setGeometry(QtCore.QRect(430, 35, 261, 30))
        self.comboBox.setStyleSheet("color: rgb(131, 148, 150);\n"
"font: 12pt \"Segoe UI\";")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_21.raise_()
        self.groupBox_2.raise_()
        self.Oscilloscope.raise_()
        self.groupBox_3.raise_()
        self.groupBox.raise_()
        self.comboBox_4.raise_()
        self.label_25.raise_()
        self.radioButton.raise_()
        self.label_4.raise_()
        self.label_26.raise_()
        self.label_28.raise_()
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label_23 = QtWidgets.QLabel(self.tab_2)
        self.label_23.setGeometry(QtCore.QRect(0, 650, 1270, 20))
        self.label_23.setObjectName("label_23")
        self.Oscilloscope2 = PlotWidget(self.tab_2)
        self.Oscilloscope2.setGeometry(QtCore.QRect(10, 360, 800, 250))
        self.Oscilloscope2.setBackground(DarkSolarized[0])
        self.Oscilloscope2.setObjectName("Oscilloscope2")
        self.checkBox_23 = QtWidgets.QCheckBox(self.Oscilloscope2)
        self.checkBox_23.setEnabled(True)
        self.checkBox_23.setGeometry(QtCore.QRect(60, 0, 100, 20))
        self.checkBox_23.setAutoFillBackground(False)
        self.checkBox_23.setStyleSheet("color: rgb(38, 139, 210);\n"
"background-color: rgb(0, 30, 38);")
        self.checkBox_23.setChecked(True)
        self.checkBox_23.setObjectName("checkBox_23")
        self.checkBox_22 = QtWidgets.QCheckBox(self.Oscilloscope2)
        self.checkBox_22.setEnabled(True)
        self.checkBox_22.setGeometry(QtCore.QRect(5, 0, 100, 20))
        self.checkBox_22.setAutoFillBackground(False)
        self.checkBox_22.setStyleSheet("color: rgb(220, 50, 47);\n"
"background-color: rgb(0, 30, 38);")
        self.checkBox_22.setChecked(True)
        self.checkBox_22.setObjectName("checkBox_22")
        self.checkBox_22.raise_()
        self.checkBox_23.raise_()
        self.groupBox_4 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_4.setGeometry(QtCore.QRect(820, 40, 440, 600))
        self.groupBox_4.setObjectName("groupBox_4")
        self.label_10 = QtWidgets.QLabel(self.groupBox_4)
        self.label_10.setGeometry(QtCore.QRect(10, 55, 16, 25))
        self.label_10.setObjectName("label_10")
        self.a_Izhikevich = QtWidgets.QLineEdit(self.groupBox_4)
        self.a_Izhikevich.setGeometry(QtCore.QRect(30, 60, 130, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.a_Izhikevich.setFont(font)
        self.a_Izhikevich.setFrame(True)
        self.a_Izhikevich.setAlignment(QtCore.Qt.AlignCenter)
        self.a_Izhikevich.setObjectName("a_Izhikevich")
        self.b_Izhikevich = QtWidgets.QLineEdit(self.groupBox_4)
        self.b_Izhikevich.setGeometry(QtCore.QRect(30, 150, 130, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.b_Izhikevich.setFont(font)
        self.b_Izhikevich.setAlignment(QtCore.Qt.AlignCenter)
        self.b_Izhikevich.setObjectName("b_Izhikevich")
        self.c_Izhikevich = QtWidgets.QLineEdit(self.groupBox_4)
        self.c_Izhikevich.setGeometry(QtCore.QRect(30, 315, 130, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.c_Izhikevich.setFont(font)
        self.c_Izhikevich.setAlignment(QtCore.Qt.AlignCenter)
        self.c_Izhikevich.setObjectName("c_Izhikevich")
        self.d_Izhikevich = QtWidgets.QLineEdit(self.groupBox_4)
        self.d_Izhikevich.setGeometry(QtCore.QRect(30, 400, 130, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.d_Izhikevich.setFont(font)
        self.d_Izhikevich.setAlignment(QtCore.Qt.AlignCenter)
        self.d_Izhikevich.setObjectName("d_Izhikevich")
        self.DisplayNeuron = QtWidgets.QPushButton(self.groupBox_4)
        self.DisplayNeuron.setEnabled(True)
        self.DisplayNeuron.setGeometry(QtCore.QRect(30, 530, 130, 30))
        self.DisplayNeuron.clicked.connect(lambda: self.DrawNeuron())
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.DisplayNeuron.setFont(font)
        self.DisplayNeuron.setStyleSheet("color: rgb(147, 161, 161);")
        self.DisplayNeuron.setObjectName("DisplayNeuron")
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.groupBox_4)
        self.textBrowser_3.setGeometry(QtCore.QRect(165, 50, 271, 451))
        self.textBrowser_3.setStyleSheet("color: rgb(147, 161, 161);")
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.label_11 = QtWidgets.QLabel(self.groupBox_4)
        self.label_11.setGeometry(QtCore.QRect(10, 150, 16, 25))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.groupBox_4)
        self.label_12.setGeometry(QtCore.QRect(10, 315, 16, 25))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.groupBox_4)
        self.label_13.setGeometry(QtCore.QRect(10, 400, 16, 25))
        self.label_13.setObjectName("label_13")
        self.SaveNeuron = QtWidgets.QPushButton(self.groupBox_4)
        self.SaveNeuron.setEnabled(True)
        self.SaveNeuron.setGeometry(QtCore.QRect(210, 530, 130, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.SaveNeuron.setFont(font)
        self.SaveNeuron.setStyleSheet("color: rgb(147, 161, 161);")
        self.SaveNeuron.setObjectName("SaveNeuron")
        self.label_14 = QtWidgets.QLabel(self.tab_2)
        self.label_14.setGeometry(QtCore.QRect(10, 1, 611, 31))
        self.label_14.setStyleSheet("color: rgb(147, 161, 161);")
        self.label_14.setObjectName("label_14")
        self.textBrowser = QtWidgets.QTextBrowser(self.tab_2)
        self.textBrowser.setGeometry(QtCore.QRect(10, 50, 800, 311))
        self.textBrowser.setStyleSheet("color: rgb(147, 161, 161);")
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.tab_2)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 620, 800, 50))
        self.textBrowser_2.setStyleSheet("color: rgb(147, 161, 161);")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.label_24 = QtWidgets.QLabel(self.tab_3)
        self.label_24.setGeometry(QtCore.QRect(0, 650, 1270, 20))
        self.label_24.setObjectName("label_24")
        self.Oscilloscope_3 = QtWidgets.QWidget(self.tab_3)
        self.Oscilloscope_3.setGeometry(QtCore.QRect(0, 70, 850, 480))
        self.Oscilloscope_3.setStyleSheet("background-color: rgb(33, 33, 33);")
        self.Oscilloscope_3.setObjectName("Oscilloscope_3")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.tabWidget.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.tabWidget.addTab(self.tab_5, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1280, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Neuron parameters"))
        self.label_7.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:700;\">Synapse 1</span></p></body></html>"))
        self.label_8.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:700;\">Synapse 2</span></p></body></html>"))
        self.label_20.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:700;\">Voltage Clamp</span></p></body></html>"))
        self.lineEdit_10.setText(_translate("MainWindow", "-70"))
        self.checkBox_2.setText(_translate("MainWindow", "Decay"))
        self.checkBox_3.setText(_translate("MainWindow", "Recovery"))
        self.checkBox_4.setText(_translate("MainWindow", "Recovery"))
        self.checkBox_5.setText(_translate("MainWindow", "Decay"))
        self.lineEdit_5.setText(_translate("MainWindow", "0.990"))
        self.checkBox_6.setText(_translate("MainWindow", "Synaptic Gain"))
        self.checkBox_10.setText(_translate("MainWindow", "Membrane potential "))
        self.checkBox_7.setText(_translate("MainWindow", "Synaptic Gain"))
        self.label_6.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:700;\">Noise</span></p></body></html>"))
        self.checkBox_14.setText(_translate("MainWindow", "Noise Level"))
        self.label_17.setText(_translate("MainWindow", "mV"))
        self.label_19.setText(_translate("MainWindow", "0"))
        self.label_22.setText(_translate("MainWindow", "max"))
        self.lineEdit_4.setText(_translate("MainWindow", "0.995"))
        self.label_21.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">This project is licensed under the GNU General Public License v3.0</p></body></html>"))
        self.groupBox.setTitle(_translate("MainWindow", "Stimulation parameters"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:700;\">Stimulus</span></p></body></html>"))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:700;\">Photo-Receptor</span></p></body></html>"))
        self.checkBox.setText(_translate("MainWindow", "Custom Stimulus"))
        self.checkBox_8.setText(_translate("MainWindow", "Stimulus Strenght"))
        self.checkBox_9.setText(_translate("MainWindow", "Stimulus Frequency"))
        self.checkBox_11.setText(_translate("MainWindow", "Photo-Gain"))
        self.checkBox_12.setText(_translate("MainWindow", "Recovery"))
        self.checkBox_13.setText(_translate("MainWindow", "Decay"))
        self.lineEdit_11.setText(_translate("MainWindow", "0.025"))
        self.lineEdit_12.setText(_translate("MainWindow", "0.001"))
        self.label_18.setText(_translate("MainWindow", "0"))
        self.checkBox_15.setText(_translate("MainWindow", "Vm"))
        self.checkBox_16.setText(_translate("MainWindow", "Input Current"))
        self.checkBox_17.setText(_translate("MainWindow", "Stimulus"))
        self.checkBox_18.setText(_translate("MainWindow", "Synapse 1 Vm"))
        self.checkBox_19.setText(_translate("MainWindow", "Synapse 1 Input"))
        self.checkBox_20.setText(_translate("MainWindow", "Synapse 2 Vm"))
        self.checkBox_21.setText(_translate("MainWindow", "Synapse 2 Input"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Data Recording"))
        self.comboBox_2.setItemText(0, _translate("MainWindow", "Live "))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "Grab"))
        self.comboBox_2.setItemText(2, _translate("MainWindow", "Loop"))
        self.pushButton_2.setText(_translate("MainWindow", "Record"))
        self.pushButton_5.setText(_translate("MainWindow", "Browse"))
        self.label_16.setText(_translate("MainWindow", "Select"))
        self.pushButton.setText(_translate("MainWindow", "Browse"))
        self.lineEdit_8.setText(_translate("MainWindow", "1"))
        self.label_15.setText(_translate("MainWindow", "Number of loops"))
        self.comboBox_4.setItemText(0, _translate("MainWindow", "COM4"))
        self.comboBox_4.setItemText(1, _translate("MainWindow", "COM11"))
        self.label_25.setText(_translate("MainWindow", "Select Port :"))
        self.radioButton.setText(_translate("MainWindow", "Connected"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt; font-weight:700;\">Neuron Mode</span></p></body></html>"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Tonic Spiking"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Phasic Spiking"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Tonic Bursting"))
        self.comboBox.setItemText(3, _translate("MainWindow", "Phasic Bursting"))
        self.comboBox.setItemText(4, _translate("MainWindow", "Mixed Mode"))
        self.comboBox.setItemText(5, _translate("MainWindow", "Spike Frequency Adaptation"))
        self.comboBox.setItemText(6, _translate("MainWindow", "Class 1 Excitable"))
        self.comboBox.setItemText(7, _translate("MainWindow", "Class 2 Excitable"))
        self.comboBox.setItemText(8, _translate("MainWindow", "Spike Latency"))
        self.comboBox.setItemText(9, _translate("MainWindow", "Subthreshold Oscillations"))
        self.comboBox.setItemText(10, _translate("MainWindow", "Resonator"))
        self.comboBox.setItemText(11, _translate("MainWindow", "Integrator"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Spikeling"))
        self.label_23.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">This project is licensed under the GNU General Public License v3.0</p></body></html>"))
        self.checkBox_23.setText(_translate("MainWindow", "Stimulus"))
        self.checkBox_22.setText(_translate("MainWindow", "Vm"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Izhikevich parameters"))
        self.label_10.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:700;\">a</span></p></body></html>"))
        self.a_Izhikevich.setText(_translate("MainWindow", "0.02"))
        self.b_Izhikevich.setText(_translate("MainWindow", "0.2"))
        self.c_Izhikevich.setText(_translate("MainWindow", "-65"))
        self.d_Izhikevich.setText(_translate("MainWindow", "2"))
        self.DisplayNeuron.setText(_translate("MainWindow", "Display Neuron"))
        self.textBrowser_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The parameter<span style=\" font-size:12pt; font-weight:700;\"> a</span> describes the time scale of the recovery variable u. </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Smaller values result in slower recovery. </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" text-decoration: underline;\">A typical value is a = 0.02.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The parameter <span style=\" font-size:12pt; font-weight:700;\">b</span> describes the sensitivity of the recovery variable u to the subthreshold fluctuations of the membrane potential v.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Greater values couple v and u more strongly resulting in possible subthreshold oscillations and low-threshold spiking dynamics. </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" text-decoration: underline;\">A typical value is b = 0.2. </span>The case b &lt; a(b &gt; a) corresponds to saddle-node (Andronov–Hopf) bifurcation of the resting state</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The parameter <span style=\" font-size:12pt; font-weight:700;\">c</span> describes the after-spike reset value of the membrane potential v caused by the fast high-threshold K+ conductances. </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" text-decoration: underline;\">A typical value is c = -65 (mV).</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The parameter <span style=\" font-size:12pt; font-weight:700;\">d</span> describes after-spike reset of the recovery variable u caused by slow high-threshold Na+ and K+ conductances.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" text-decoration: underline;\">A typical value is d = 2.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  </p></body></html>"))
        self.label_11.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:700;\">b</span></p></body></html>"))
        self.label_12.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:700;\">c</span></p></body></html>"))
        self.label_13.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:700;\">d</span></p></body></html>"))
        self.SaveNeuron.setText(_translate("MainWindow", "Save Neuron"))
        self.label_14.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt; font-weight:700;\">Spikeling is built on the Izhikevich model</span></p></body></html>"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">Bifurcation methodologies enable us to reduce many biophysically accurate Hodgkin–Huxley-type neuronal models to a two-dimensional (2-D) system of ordinary differential equations of the form:</span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt; font-weight:700;\">v\' = 0.04v</span><span style=\" font-size:11pt; font-weight:700; vertical-align:super;\">2</span><span style=\" font-size:11pt; font-weight:700;\"> + 5v + 140 - u + I                    </span><span style=\" font-size:11pt;\">&amp;</span><span style=\" font-size:11pt; font-weight:700;\">                    u\' = a(bv - u)</span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">with the auxiliary after-spike resetting:</span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">if </span><span style=\" font-size:11pt; font-weight:700;\">v &gt;= 30 mV</span><span style=\" font-size:10pt;\">, then </span><span style=\" font-size:11pt; font-weight:700;\">v = c</span><span style=\" font-size:10pt;\"> and</span><span style=\" font-size:11pt;\"> </span><span style=\" font-size:11pt; font-weight:700;\">u = u + d</span><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">Here, </span><span style=\" font-size:11pt; font-weight:700;\">v</span><span style=\" font-size:10pt;\"> and </span><span style=\" font-size:11pt; font-weight:700;\">u</span><span style=\" font-size:10pt;\"> are dimensionless variables, and </span><span style=\" font-size:11pt; font-weight:700;\">a</span><span style=\" font-size:10pt;\">, </span><span style=\" font-size:11pt; font-weight:700;\">b</span><span style=\" font-size:10pt;\">, </span><span style=\" font-size:11pt; font-weight:700;\">c</span><span style=\" font-size:10pt;\">, and </span><span style=\" font-size:11pt; font-weight:700;\">d</span><span style=\" font-size:10pt;\"> are dimensionless parameters, and </span><span style=\" font-size:11pt; font-weight:700;\">\'= d/dt</span><span style=\" font-size:10pt;\">, where </span><span style=\" font-size:11pt; font-weight:700;\">t</span><span style=\" font-size:10pt;\"> is the time. </span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">The variable v represents the membrane potential of the neuron and </span><span style=\" font-size:11pt; font-weight:700;\">u</span><span style=\" font-size:10pt;\"> represents a membrane recovery variable, which accounts for the activation of K+ ionic currents and inactivation of Na+ ionic currents, and it provides negative feedback to </span><span style=\" font-size:11pt; font-weight:700;\">v</span><span style=\" font-size:10pt;\">. </span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">After the spike reaches its apex (+30 mV), the membrane voltage and the recovery variable are reset. </span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">Synaptic currents or injected DC-currents are delivered via the variable</span><span style=\" font-size:10pt; font-weight:700;\"> </span><span style=\" font-size:11pt; font-weight:700;\">I</span><span style=\" font-size:10pt;\">.</span></p></body></html>"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">As most real neurons, the model does not have a fixed threshold: Depending on the history of the membrane potential prior to the spike, the threshold potential can be as low as -55 mV or as high as -40mV</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Neuron mode generator"))
        self.label_24.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">This project is licensed under the GNU General Public License v3.0</p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Stimulus generator"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Data Analysis"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "About"))

    def DrawNeuron(self):
            self.Oscilloscope2.clear()
            a = float(self.a_Izhikevich.text())
            b = float(self.b_Izhikevich.text())
            c = float(self.c_Izhikevich.text())
            d = float(self.d_Izhikevich.text())
            t = 0.0
            dt = 1.0 / 200.0
            v = -65.0
            v_thresh = 30.0
            u = 0.0
            vs = []
            nt = np.linspace(0, 70, 14000)
            while t < 70.0:
                    vs.append(v)
                    dv = (0.04 * v * v) + (5.0 * v) + 140.0 - u
                    du = a * ((b * v) - u)
                    if t > 20.0 and t < 45.0:
                            dv += 50.0
                    v += dv * dt
                    u += du * dt
                    if v >= v_thresh:
                            v = c
                            u = u + d
                    t += dt

            nstim = np.zeros(14000)
            nstim[:] = -80
            nstim[4000:9000] = -20

            self.Oscilloscope2.plot(nt, nstim, pen=(DarkSolarized[3]))
            self.Oscilloscope2.plot(nt, vs, pen=(DarkSolarized[2]))
            self.Oscilloscope2.setBackground(DarkSolarized[0])



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
